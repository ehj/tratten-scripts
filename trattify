#!/usr/bin/perl

use strict;
#use warnings;
use Tratten::Monitored;
use Tratten::Throttle;

open OUT, ">out.txt";

our $table_header = "{| border='1' cellspacing='0' class='wikitable sortable'
! oeil link / tratten page !! forecasts !! stage reached !! procedure !! stage !! name !! committee !! rapporteur !! COM number !! monitored\n";
our $table_footer = "|}\n";

our @stageId = (100, 210, 235, 290, 300, 400, 500, 600, 610, 640, 700, 710, 720);

our $stageId;
our $next_index;
our $number_results;
our $stage_reached;

sub get_page {
  &Tratten::Throttle::sync("http://www.europarl.europa.eu/");
  my $form = "-d 'xpath=/oeil/search/procstage/stage' -d 'scope=stage' -d 'countEStat=true' -d 'startIndex=$next_index' -d 'stageId=$stageId' -d 'pageSize=50'";
  my @body = `curl -# $form --url http://www.europarl.europa.eu/oeil/FindByStage.do`;
  while (@body) {
    $_ = shift @body;
    if (/<span class="number_results">(\d+)<\/span>/) {
      $number_results = $1;
      shift @body;
      shift @body;
      ($stage_reached = shift @body) =~ s/^\s*(.+)\s*$/$1/;
      last;
    }
  }
  $next_index += 50;
  return @body;
}

  
our @data;
our $counter = 0;

sub next_bare { while (@data) { $_ = shift @data; return $1 if /^\s*(\w.*)$/; } }

sub table_body {
  while (@data) {
    $_ = shift @data;
    if (/(file\.jsp\?id=[0-9]+)" class="com_acronym">([^<]+)<\/a>/) {
      my $url = "http://www.europarl.europa.eu/oeil/$1";
      my $id = $2;
      my ($name, $proc, $stage, $committee, $rapporteur, $com) = ();
      while (@data) {
        $_ = shift @data;
        last if /procedure number/;
        ($proc, $stage) = ($1,$3) if /">([^<,]+)(, ([^<]+))?<\/div>/;
        $name = &next_bare if /starts with the title/;
        $committee = &next_bare if /Display the committee responsible/;
        $rapporteur = &next_bare if /Display the reporter or co-reporter/;
        $com = $1 if /(COM\(\d+\)\d+)/;
      }
      my $monitor = $Tratten::Monitored::refnum{$id};
      my $forecast = "No data";
      if ($monitor) {
        $forecast = "No forecasts";
        my $doss = Tratten::Monitored::dossier($monitor);
        if ($doss->{forecasts}) {
          my $x = $doss->{forecasts}->[0];
          my $date = $x->{date};
          if ($date =~ m#^(\d\d)/(\d\d)/(\d\d\d\d)$#) { $date = "$3-$2-$1"; }
          $forecast = $date . " " . $x->{activity};
          my $num_forecasts = scalar @{$doss->{forecasts}};
          if ($num_forecasts == 2) { $forecast .= " (+ 1 more forecast)" }
          if ($num_forecasts > 2) { $forecast .= " (+ $num_forecasts more forecasts)" }
        }
      }
      my $monitored = "[" . $monitor->{log} . " $1]" if $monitor->{log} =~ /\/([^\/]+)\.html$/;
      $counter += 1;
      print OUT "|-\n";
      print OUT "| [$url $id] / [[$id]] || $forecast || $stage_reached || $proc || $stage || $name || $committee || $rapporteur || $com || $monitored\n";
    }
  }
}


print "Getting oeil-pages...\n";
print OUT $table_header;
while (@stageId) {
  $stageId = shift @stageId;
  $next_index = 1;
  $number_results = 1;
  while ($next_index <= $number_results) {
    @data = &get_page;
    &table_body;
  }
}
print OUT $table_footer;

chomp(my $date = `date -u +%F`);
my $dossiers_monitored = keys %Tratten::Monitored::refnum;
print OUT "\nRetrieved $counter rows of data at $date. Number of dossiers monitored: $dossiers_monitored.\n";

print "Done.\n";
