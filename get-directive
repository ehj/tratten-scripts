#!/usr/bin/perl

# This script takes as argument a directive number on the form NNNN/NN/EC or
# NNNN/NN/EG as well as a two letter language code.

use strict;

our %vocab = (
  EN => {
    source => "Source",
    basis => "BASIS",
    recitals => "RECITALS",
    chapter => "CHAPTER",
    annex => "ANNEX",
    article => "Article",
  },
  SV => {
    source => "Källa",
    basis => "GRUND",
    recitals => "SKÄL",
    chapter => "KAPITEL",
    annex => "BILAGA",
    article => "Artikel",
  },
);

our ($lang, $year, $num);

while (@ARGV) {
  $_ = shift;
  if (/^[a-zA-Z]{2}$/) { $lang = "\U$_\E" }
  elsif (/^(\d+)\/(\d+)\/E?E[CGK]$/) { ($year, $num) = ($1,$2) }
  else { die "Unrecognized argument"}
}

die "Missing argument" unless $lang and $year and $num;
die "No vocabulary defined for language $lang" unless $vocab{$lang};
%vocab = %{$vocab{$lang}};

$year = "19$year" if $year < 100;
$num = sprintf "%04d",$num;
our $url = "http://eur-lex.europa.eu/LexUriServ/LexUriServ.do?uri=CELEX:3${year}L$num:$lang:HTML";
$_ = `curl --url $url`;

/^\s*<strong>\s*(\S.+\S)\s*<\/strong>\s*$/m;
print "'''$1'''\n----\n";
/<TXT_TE>\n(.*)\n<\/TXT_TE>/s or die;
$_ = $1;
s/<p>/\n/g;
s/<\/p>/\n/g;
s/^.+?\n{4}//s;
s/(\d+\/\d+\/E?E[CGK])/[[$1]]/g;
s/^\(1\)/==$vocab{recitals}==\n(1)/m;
s/^\((\d+)\)\s*/===rec $1===\n/gm;
s/^$vocab{chapter} (\w+)$/==$vocab{chapter} $1==/gmi;
s/^$vocab{annex}$/==$vocab{annex}==/gmi;
s/^$vocab{annex} (\w+)$/==$vocab{annex} $1==/gmi;
s/^$vocab{article} (\d+)$/===art $1===/gmi;
print "$vocab{source}: $url\n----\n\n==$vocab{basis}==\n";
print;
