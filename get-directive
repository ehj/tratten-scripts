#!/usr/bin/perl

# This script takes as argument a directive number on the form NNNN/NN/EC or
# NNNN/NN/EG as well as a two letter language code.

use strict;

our %vocab = (
  EN => {
    source => "Source",
    basis => "BASIS",
    recitals => "RECITALS",
    articles => "ARTICLES",
    chapter => "CHAPTER",
    annex => "ANNEX",
    article => "Article",
  },
  SV => {
    source => "Källa",
    basis => "GRUND",
    recitals => "SKÄL",
    articles => "ARTIKLAR",
    chapter => "KAPITEL",
    annex => "BILAGA",
    article => "Artikel",
  },
);

our ($lang, $year, $num, $url);

while (@ARGV) {
  $_ = shift;
  if (/^[a-zA-Z]{2}$/) { $lang = "\U$_\E" }
  elsif (/^(\d+)\/(\d+)\/E?E[CGK]$/) { ($year, $num) = ($1,$2) }
  elsif (/^(http:.*)$/) { $url = $1; }
  else { die "Unrecognized argument"}
}

die "Missing argument" unless $lang and (($year and $num) or $url);
die "No vocabulary defined for language $lang" unless $vocab{$lang};
%vocab = %{$vocab{$lang}};

$year = "19$year" if $year < 100;
$num = sprintf "%04d",$num;
our @urls =
  ("http://eur-lex.europa.eu/LexUriServ/LexUriServ.do?uri=CELEX:3${year}L$num:$lang:HTML",
   "http://eur-lex.europa.eu/LexUriServ/LexUriServ.do?uri=CELEX:3${year}D$num:$lang:HTML");
@urls = $url if $url;
do {
  $url = shift @urls or die "No working url";
  print STDERR "$url\n";
  $_ = `curl --url $url`;
} until /<title>/;

/^\s*<strong>\s*(\S.+\S)\s*<\/strong>\s*$/m;
print "'''$1'''\n----\n";
/<TXT_TE>\s*(.*)\s*<\/TXT_TE>/s or die;
$_ = $1;
s/<p>/\n/g;
s/<\/p>/\n/g;
#s/^.+?\n{4}//s;
s/(\d+\/\d+\/E?E[CGK])/[[$1]]/g;
s/^$vocab{article}\s+(\d+)\s*$/===art $1===/gmi;
s/^$vocab{article}\s+(\d+)\s+(.*?)\s*$/===art $1===\n$2\n/gmi;
/^(===art 1===)$/mp;
($_, my $tmp) = (${^PREMATCH}, ${^MATCH} . ${^POSTMATCH});
s/^\((\d+)\)\s*/===rec $1===\n/gm;
s/^(\d+)\.\s*/===rec $1===\n/gm;
s/^(===rec 1===)$/==$vocab{recitals}==\n$1/m;
$_ .= "==$vocab{articles}==\n" . $tmp;
s/^$vocab{chapter}\s+(\w+)\s*$/==$vocab{chapter} $1==/gmi;
s/^$vocab{annex}\s*$/==$vocab{annex}==/gmi;
s/^$vocab{annex}\s+(\w+)\s*$/==$vocab{annex} $1==/gmi;
print "$vocab{source}: $url\n----\n\n==$vocab{basis}==\n";
print;
