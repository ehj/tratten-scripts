#! /usr/bin/perl -w

use strict;
use warnings;
use diagnostics;

use utf8;
binmode STDOUT, ":utf8";

use File::Fetch;
use LWP::Simple;

my @urls = split /\n/, get 'http://www.erikjosefsson.eu/sites/default/files/urltabell3.txt';

my %commities_abbr =
(
  'Foreign Affairs'                             => 'AFET',
  'Human Rights'                                => 'DROI',
  'Security and Defence'                        => 'SEDE',
  'Development'                                 => 'DEVE',
  'International Trade'                         => 'INTA',
  'Budgets'                                     => 'BUDG',
  'Budgetary Control'                           => 'CONT',
  'Economic and Monetary Affairs'               => 'ECON',
  'Employment and Social Affairs'               => 'EMPL',
  'Environment, Public Health and Food Safety'  => 'ENVI',
  'Industry, Research and Energy'               => 'ITRE',
  'Internal Market and Consumer Protection'     => 'IMCO',
  'Transport and Tourism'                       => 'TRAN',
  'Regional Development'                        => 'REGI',
  'Agriculture and Rural Development'           => 'AGRI',
  'Fisheries'                                   => 'PECH',
  'Culture and Education'                       => 'CULT',
  'Legal Affairs'                               => 'JURI',
  'Civil Liberties, Justice and Home Affairs'   => 'LIBE',
  'Constitutional Affairs'                      => 'AFCO',
  'Women\'s Rights and Gender Equality'         => 'FEMM',
  'Petitions'                                   => 'PETI',
  'Financial, Economic and Social Crisis'       => 'CRIS'
);

sub display_results
{
  my ($commitee, $MEP, $status) = @_;
  my $abbr = (defined $commities_abbr{$commitee} && $commities_abbr{$commitee}) || "NO-ABBR";
  print '['.$commitee.'---->'.$abbr.' ('.$status.') : '.$MEP.'] ';
}

for (@urls)
{
  chomp;
  my $url = $_;
  print "$url : ";
  my $page_content = get $url;
  $page_content =~ m/\s(\S*?)<\/title>/;
  print "$1\n";

  while ($page_content =~ /<span>\s*(?:<i>)?.*?(\w[\w\s]*\w)\s+\((responsible|opinion)\)(?:<\/i>)?\s*<\/span>\s*<\/td>\s*<td [^>]*>\s*(?:<br\/>|&nbsp;)?(.*?)\s*<\/td>/msg)
  {
    display_results $1, $3, $2;
  }
  print "\n";
}
