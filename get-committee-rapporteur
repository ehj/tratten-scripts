#! /usr/bin/perl -w

use strict;
use warnings;
use diagnostics;

use utf8;
binmode STDOUT, ":utf8";
binmode STDERR, ":utf8";

use File::Fetch;
use LWP::Simple;

use Tratten::Monitored;

my %monitored = %{ &get_monitored };
my @urls = map { $monitored{$_}->[2] } sort keys %monitored;

my %commities = (
  'CODE' => 'Conciliation Committee',
  'AFET' => 'Foreign Affairs',
  'DROI' => 'Human Rights',
  'SEDE' => 'Security and Defence',
  'DEVE' => 'Development',
  'INTA' => 'International Trade',
  'BUDG' => 'Budgets',
  'CONT' => 'Budgetary Control',
  'ECON' => 'Economic and Monetary Affairs',
  'EMPL' => 'Employment and Social Affairs',
  'ENVI' => 'Environment, Public Health and Food Safety',
  'ITRE' => 'Industry, Research and Energy',
  'IMCO' => 'Internal Market and Consumer Protection',
  'TRAN' => 'Transport and Tourism',
  'REGI' => 'Regional Development',
  'AGRI' => 'Agriculture and Rural Development',
  'PECH' => 'Fisheries',
  'CULT' => 'Culture and Education',
  'JURI' => 'Legal Affairs',
  'LIBE' => 'Civil Liberties, Justice and Home Affairs',
  'AFCO' => 'Constitutional Affairs',
  'FEMM' => 'Women\'s Rights and Gender Equality',
  'PETI' => 'Petitions',
  'CRIS' => 'Financial, Economic and Social Crisis',
);

my @commities = sort keys %commities;
my %commities_abbr;
$commities_abbr{$commities{$_}} = $_ for keys %commities;
$commities_abbr{'Womenâ€™s Rights and Gender Equality'} = 'FEMM';
$commities_abbr{'Human Rights, subcommittee'} = 'DROI';
$commities_abbr{'Environment, Public Health, Consumer Policy'} = 'ENVI';
$commities_abbr{'Citizens\' Freedoms and Rights, Justice and Home Affairs'} = 'LIBE';
$commities_abbr{'Legal Affairs and Internal Market'} = 'JURI';
$commities_abbr{'Industry, External Trade, Research, Energy'} = 'ITRE';

print "{| border='1' cellspacing='0' class='wikitable sortable'\n! tratten link !! summary";
print " !! $_" for @commities;
print "\n";

my %results;

sub display_results
{
  for (@commities) {
    if (defined $results{$_}) {
      my ($MEP, $status) = @{ $results{$_} };
      print " || ($status) $MEP";
    }
    else { print " ||" }
  }
  print "\n";
}

for (@urls) {
  %results = ();
  my $url = $_;
  my $page_content = get $url;
  $page_content =~ m/\s(\S*?)<\/title>/;
  my $name = $1;
  print "|-\n | [[$name]] ||";

  while ($page_content =~ /
      <div\s[^>]*>\s*(?:<i>)?(?<comm>[^(]*?)\s+\((?<status>responsible|opinion)\)(?:<\/i>)?\s*<\/div>
      |
      <span>\s*(?:<i>)?(?<comm>[^(]*?)\s+\((?<status>responsible|opinion)\)(?:<\/i>)?\s*<\/span>\s*<\/td>\s*
      <td\s[^>]*>\s*(?:<br\/>|&nbsp;)?(?<mep>.*?)\s*<\/td>
    /msgx)
  {
    if (not defined $commities_abbr{$+{comm}}) {
      print STDERR "WARNING: Unknown commitee $+{comm}\n";
      next;
    }
    $results{$commities_abbr{$+{comm}}} = [($+{mep}||""), $+{status}];
  }
  display_results;
  print STDERR "$url $name: ". (scalar keys %results) ."\n";
}

print "|}\n";
